name: Enterprise Escrow Platform CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Compile contracts
      run: npx hardhat compile
      
    - name: Run core tests
      run: npx hardhat test test/PropertyEscrow.test.js test/EscrowFactory.test.js
      
    - name: Run upgradeable factory tests
      run: npx hardhat test test/EscrowFactoryUpgradeable.fixed.test.js
      continue-on-error: true
      
    - name: Generate test coverage
      run: npx hardhat coverage
      continue-on-error: true
      
    - name: Run Solidity linting
      run: npx solhint "contracts/**/*.sol"
      continue-on-error: true
      
    - name: Check contract sizes
      run: npx hardhat size-contracts
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security analysis
      run: node security-analysis.js
      continue-on-error: true
      
    - name: Upload security report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-analysis-report
        path: security-analysis-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production artifacts
      run: |
        npx hardhat compile
        npm run build
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-artifacts
        path: |
          artifacts/
          cache/
          coverage/